/* 
	Author: Aleksandar Milenkovic 56/05
	Rachunarski Fakultet (RAF), Univerzitet Union
	Prerada mikro c kompajlera u Javu
	
	SVN: http://code.google.com/p/javamicko/
	
	CUP Specifikacija za MiCKo
	
	CUP - LALR Parser Generator for Java
*/


import java.util.*;
import java.io.*;
import java_cup.runtime.Symbol;
import main.*;


/* Preliminaries to use the scanner.  */
scan with {: return lexer.next_token(); :};


parser code {: 
  public boolean syntaxErrors;

  Lexer lexer;

  public Parser(Lexer lex) {
      super(lex);
      lexer = lex;
  }

  
  public void report_error(String message, Object info) {
    syntaxErrors = true;
    
    System.out.print(message);
    
    if ( !(info instanceof Symbol) ) return;
    Symbol symbol = (Symbol) info;
    
    if ( symbol.left < 0 || symbol.right < 0 ) return;
    
    System.out.println(" at line "+symbol.left+", column "+symbol.right);
  }
:}; 



/* Terminals (tokens returned by lexer). */

terminal Integer _TYPE;
terminal _IF, _ELSE;
terminal _WHILE, _FOR;
terminal String _ID;
terminal _SIGNED_NUMBER, _UNSIGNED_NUMBER, _FLOAT_NUMBER;
terminal _LPAREN, _RPAREN, _LBRACKET, _RBRACKET;
terminal _COMMA, _COLON, _SEMICOLON;
terminal _ASSIGN, _PLUS, _MINUS ;
terminal Integer _MULOP;
terminal _OR, _AND;
terminal Integer _RELOP;
terminal _SWITCH, _CASE, _BREAK, _DEFAULT;
terminal _INC, _DEC;

non terminal Program					program;
non terminal Variable_List				variable_list;
non terminal Function_List				function_list;
non terminal Variable					variable;
non terminal Type						type;
non terminal Function					function;
non terminal Parameters					parameters;
non terminal Body						body;
non terminal Parameter_List				parameter_list;
non terminal Statement_List				statement_list;
non terminal Statement					statement;
non terminal Assignment_Statement		assignment_statement;
non terminal Function_Call_Statement	function_call_statement;
non terminal If_Statement				if_statement;
non terminal While_Statement			while_statement;
non terminal Return_Statement			return_statement;
non terminal Compound_Statement			compound_statement;
non terminal Switch_Statement			switch_statement;
non terminal Switch_List				switch_list;
non terminal Case_List					case_list;
non terminal Default_Statement			default_statement;
non terminal Break_Statement			break_statement;
non terminal Case_Statement				case_statement;
non terminal INC_Statement				inc_statement;
non terminal DEC_Statement				dec_statement;
non terminal Num_Exp					num_exp;
non terminal Mul_Exp					mul_exp;
non terminal Exp						exp;
non terminal Constant					constant;
non terminal Function_Call				function_call;
non terminal Arguments					arguments;
non terminal Argument_List				argument_list;
non terminal If_Part					if_part;
non terminal Log_Exp					log_exp;
non terminal And_Exp					and_exp;
non terminal Rel_Exp					rel_exp;




  